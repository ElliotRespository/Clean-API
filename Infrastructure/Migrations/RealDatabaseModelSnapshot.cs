// <auto-generated />
using System;
using Infrastructure.Database.SqlDataBases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RealDatabase))]
    partial class RealDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Animal", b =>
                {
                    b.Property<Guid>("animalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("animalID");

                    b.ToTable("Animal");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Animal");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.UserAnimalModel", b =>
                {
                    b.Property<Guid>("UserAnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserAnimalId");

                    b.HasIndex("AnimalId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAnimals");
                });

            modelBuilder.Entity("Domain.Models.UserModels.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21bd659d-8a93-4b30-acee-ac646b20f7ea"),
                            Password = "$2a$11$LneT/sEKeGA2Ehzl7gBS2.gucC5Mx1UqEk0Uy8lccpXru2H8BXHSy",
                            Role = "Admin",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("5855f6f6-f435-4dd3-bac4-8e5cf506024d"),
                            Password = "$2a$11$h6hXWZlYLXZYExpav5AoiuKNQ.7AVhHxPUkImwU9jybO5TFNn7rIW",
                            Role = "Normal",
                            UserName = "user"
                        });
                });

            modelBuilder.Entity("Domain.Models.Animalmodels.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.Animal");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Cat");

                    b.HasData(
                        new
                        {
                            animalID = new Guid("4cd3091d-0473-4ae7-a242-377b0ad521ed"),
                            Name = "Fluffig",
                            LikesToPlay = false
                        },
                        new
                        {
                            animalID = new Guid("0dfaf499-11e3-465d-abba-f757871161fe"),
                            Name = "Argjävel",
                            LikesToPlay = false
                        },
                        new
                        {
                            animalID = new Guid("11d504b8-6549-421a-9b76-4bf0099c3c4f"),
                            Name = "Simba",
                            LikesToPlay = false
                        },
                        new
                        {
                            animalID = new Guid("e5fdc5b2-ee1b-4d31-9b4b-dda03febf6b2"),
                            Name = "LedsenKatt",
                            LikesToPlay = false
                        });
                });

            modelBuilder.Entity("Domain.Models.Animalmodels.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.Animal");

                    b.HasDiscriminator().HasValue("Dog");

                    b.HasData(
                        new
                        {
                            animalID = new Guid("c05de278-e58c-44f0-acab-03b34de88ff5"),
                            Name = "Kenta"
                        },
                        new
                        {
                            animalID = new Guid("e7232a2b-ff59-4c77-b1b3-853bec44f6bf"),
                            Name = "Knugen"
                        },
                        new
                        {
                            animalID = new Guid("4c3ce220-fd70-4f70-8ca6-abbcf626e3ab"),
                            Name = "Sjöberg"
                        },
                        new
                        {
                            animalID = new Guid("5828f472-b940-4dd0-a869-d08bfd959d95"),
                            Name = "Berra"
                        },
                        new
                        {
                            animalID = new Guid("12345678-1234-5678-1234-567812345671"),
                            Name = "DogTest1"
                        },
                        new
                        {
                            animalID = new Guid("12345678-1234-5678-1234-567812345672"),
                            Name = "DogTest2"
                        },
                        new
                        {
                            animalID = new Guid("12345678-1234-5678-1234-567812345673"),
                            Name = "DogTest3"
                        },
                        new
                        {
                            animalID = new Guid("12345678-1234-5678-1234-567812345674"),
                            Name = "DogTest4"
                        });
                });

            modelBuilder.Entity("Domain.Models.UserAnimalModel", b =>
                {
                    b.HasOne("Domain.Models.Animal", "Animal")
                        .WithMany("UserAnimals")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.UserModels.UserModel", "user")
                        .WithMany("UserAnimals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Domain.Models.Animal", b =>
                {
                    b.Navigation("UserAnimals");
                });

            modelBuilder.Entity("Domain.Models.UserModels.UserModel", b =>
                {
                    b.Navigation("UserAnimals");
                });
#pragma warning restore 612, 618
        }
    }
}
