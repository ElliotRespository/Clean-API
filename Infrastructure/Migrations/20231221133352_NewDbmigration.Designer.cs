// <auto-generated />
using System;
using Infrastructure.Database.SqlDataBases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RealDatabase))]
    [Migration("20231221133352_NewDbmigration")]
    partial class NewDbmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Animal", b =>
                {
                    b.Property<Guid>("animalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("animalID");

                    b.ToTable("Animal");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Animal");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.UserAnimalModel", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "AnimalId");

                    b.HasIndex("AnimalId");

                    b.ToTable("UserAnimals");
                });

            modelBuilder.Entity("Domain.Models.UserModels.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9e64420c-a8f2-4a2a-a467-f3b87eaf6360"),
                            Password = "$2a$11$f.6FfsZZNIQh6WvmCX.fteVQknmL3DYW5zfDN2e35/wfQOEkjYsaC",
                            Role = "Admin",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("3bccd9fa-e28d-4304-91c4-65621bc0d37e"),
                            Password = "$2a$11$6l9UEGVjmUxLx6tH.On/TOBY.oki9GIxAIg3TzMM/GS9swrcUBwvm",
                            Role = "Normal",
                            UserName = "user"
                        });
                });

            modelBuilder.Entity("Domain.Models.Animalmodels.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.Animal");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Cat");

                    b.HasData(
                        new
                        {
                            animalID = new Guid("8045ef54-6a45-4a7c-bbee-64d075b4738a"),
                            Name = "Fluffig",
                            LikesToPlay = false
                        },
                        new
                        {
                            animalID = new Guid("d1164c2a-f987-4566-9c0b-3aec2e80fde4"),
                            Name = "Argjävel",
                            LikesToPlay = false
                        },
                        new
                        {
                            animalID = new Guid("d294bf91-7167-4726-95c2-7911c66d34f4"),
                            Name = "Simba",
                            LikesToPlay = false
                        },
                        new
                        {
                            animalID = new Guid("ae0ad98b-db69-446b-ae1b-61c3132c9213"),
                            Name = "LedsenKatt",
                            LikesToPlay = false
                        });
                });

            modelBuilder.Entity("Domain.Models.Animalmodels.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.Animal");

                    b.HasDiscriminator().HasValue("Dog");

                    b.HasData(
                        new
                        {
                            animalID = new Guid("04588cbf-102e-4ac4-9dce-2cadb6085def"),
                            Name = "Kenta"
                        },
                        new
                        {
                            animalID = new Guid("1cf91ef3-710a-4370-bb4c-0965f6407159"),
                            Name = "Knugen"
                        },
                        new
                        {
                            animalID = new Guid("e3d8734f-031e-4d23-81e6-70b17c762508"),
                            Name = "Sjöberg"
                        },
                        new
                        {
                            animalID = new Guid("50eac6ac-14fe-447d-abeb-b30969cf3b15"),
                            Name = "Berra"
                        },
                        new
                        {
                            animalID = new Guid("12345678-1234-5678-1234-567812345671"),
                            Name = "DogTest1"
                        },
                        new
                        {
                            animalID = new Guid("12345678-1234-5678-1234-567812345672"),
                            Name = "DogTest2"
                        },
                        new
                        {
                            animalID = new Guid("12345678-1234-5678-1234-567812345673"),
                            Name = "DogTest3"
                        },
                        new
                        {
                            animalID = new Guid("12345678-1234-5678-1234-567812345674"),
                            Name = "DogTest4"
                        });
                });

            modelBuilder.Entity("Domain.Models.UserAnimalModel", b =>
                {
                    b.HasOne("Domain.Models.Animal", "Animal")
                        .WithMany("UserAnimals")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.UserModels.UserModel", "user")
                        .WithMany("UserAnimals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Domain.Models.Animal", b =>
                {
                    b.Navigation("UserAnimals");
                });

            modelBuilder.Entity("Domain.Models.UserModels.UserModel", b =>
                {
                    b.Navigation("UserAnimals");
                });
#pragma warning restore 612, 618
        }
    }
}
